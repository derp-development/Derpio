plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
}

group 'me.conclure.derpio'
version '1.0'
mainClassName = 'me.conclure.derpio.Main'
sourceCompatibility = targetCompatibility = JavaVersion.VERSION_14

shadowJar {
    archiveFileName.set("Bot.jar")
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url 'https://repo.aikar.co/content/groups/aikar/'}
}

dependencies {
    compileOnly 'org.jetbrains:annotations:20.1.0'
    runtimeOnly 'ch.qos.logback:logback-classic:1.2.3'
    implementation 'net.dv8tion:JDA:4.2.0_228'
    implementation 'com.google.guava:guava:30.1-jre'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.github.ben-manes.caffeine:caffeine:2.8.8'
    implementation 'com.github.ben-manes.caffeine:guava:2.8.8'
    implementation 'net.sf.jopt-simple:jopt-simple:6.0-alpha-3'
    implementation 'org.apache.commons:commons-lang3:3.11'
    implementation 'commons-io:commons-io:2.8.0'
    implementation 'net.sf.trove4j:trove4j:3.0.3'

    // Test
    /*
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

     */
}

task cloneJar(group: "bot") {
    dependsOn shadowJar
    def dir = file("./run/")

    doFirst {
        if (!dir.exists()) {
            dir.mkdirs()
        }
    }

    doLast {
        copy {
            from shadowJar.archiveFile
            into dir
        }
    }
}

task runBot(type: JavaExec, group: "bot") {
    //Declare your token here
    //Example: `String token = "xxxx"`
    String token = derpioToken

    workingDir file("./run/")
    main "-jar"
    standardInput System.in

    args "Bot.jar", "-token", token
}

task cloneRunBot(group: "bot") {
    dependsOn cloneJar
    finalizedBy runBot
}

/*
test {
    useJUnitPlatform()
}

 */